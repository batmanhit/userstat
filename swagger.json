{
  "swagger": "2.0",
  "info": {
    "title": "compare-userstats",
    "version": "1.0.0",
    "description": "API that persists daily stats of compare users usage"
  },
  "host": "svr-compare.optizmo.<tld>",
  "basePath": "/userstats",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Browse",
        "description": "The browse endpoint returns an array of records for the {id} between the range of the query params from and to, or for the month or year.",
        "operationId": "userstat-browse",
        "tags": [
          "userstat-browse"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bearerToken"
          },
          {
            "$ref": "#/parameters/jsonContentType"
          },
          {
            "name": "id",
            "in": "query",
            "description": "User Stat ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "from",
            "in": "query",
            "description": "From Date",
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "To Date",
            "type": "string"
          },
          {
            "name": "month",
            "in": "query",
            "description": "Month",
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful browse",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "default": "OK"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Userstat"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/NotFound"
          },
          "401": {
            "$ref": "#/responses/UnAuthorised"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      },
      "post": {
        "summary": "Create a UserStat",
        "description": "1. Authenticates request\n2. Validates request payload\n3. Creates new userstat in database\n4. Responds with the newly created record\n",
        "operationId": "userstat-add",
        "tags": [
          "userstat-add"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bearerToken"
          },
          {
            "$ref": "#/parameters/jsonContentType"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "userID": {
                  "type": "integer"
                },
                "jobs": {
                  "type": "integer"
                },
                "records": {
                  "type": "integer"
                }
              }
            },
            "description": "JSON Body for a new userstat"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/NotFound"
          },
          "401": {
            "$ref": "#/responses/UnAuthorised"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      },
      "options": {
        "operationId": "preflight-userstat-add",
        "parameters": [
          {
            "$ref": "#/parameters/bearerToken"
          },
          {
            "$ref": "#/parameters/jsonContentType"
          }
        ],
        "description": "Enable CORS by returning correct headers",
        "tags": [
          "preflight"
        ],
        "responses": {
          "200": {
            "description": "preflight headers"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      }
    },
    "/{id}": {
      "get": {
        "summary": "Read",
        "description": "The read endpoint returns a single record for the {id} of the current day.Should be able to abstract from the date field the day value.",
        "operationId": "userstat-read",
        "tags": [
          "userstat-read"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bearerToken"
          },
          {
            "$ref": "#/parameters/jsonContentType"
          },
          {
            "$ref": "#/parameters/userstatID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful read",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "default": "OK"
                },
                "data": {
                  "$ref": "#/definitions/Userstat"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/NotFound"
          },
          "401": {
            "$ref": "#/responses/UnAuthorised"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      },
      "put": {
        "summary": "Edit",
        "description": "The Edit endpoint is overloaded and is not RESTFUL; it can also create a new record if it doesn't exist. If the record exists, it increments the jobs and records values.",
        "operationId": "userstat-edit",
        "tags": [
          "userstat-edit"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bearerToken"
          },
          {
            "$ref": "#/parameters/jsonContentType"
          },
          {
            "$ref": "#/parameters/userstatID"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "jobs": {
                  "type": "integer"
                },
                "records": {
                  "type": "integer"
                }
              }
            },
            "description": "Edit Body"
          }
        ],
        "responses": {
          "200": {
            "description": "successful edit",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "default": "OK"
                },
                "data": {
                  "$ref": "#/definitions/Userstat"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/NotFound"
          },
          "401": {
            "$ref": "#/responses/UnAuthorised"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      },
      "options": {
        "operationId": "preflight-userstat-edit",
        "parameters": [
          {
            "$ref": "#/parameters/bearerToken"
          },
          {
            "$ref": "#/parameters/jsonContentType"
          },
          {
            "$ref": "#/parameters/userstatID"
          }
        ],
        "description": "Enable CORS by returning correct headers",
        "tags": [
          "preflight"
        ],
        "responses": {
          "200": {
            "description": "preflight headers"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      }
    },
    "/swagger": {
      "get": {
        "description": "swagger spec",
        "operationId": "swagger",
        "tags": [
          "swagger"
        ],
        "responses": {
          "200": {
            "description": "swagger spec"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "passthroughBehavior": "when_no_match",
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/<arn>/invocations",
          "httpMethod": "POST"
        }
      }
    }
  },
  "definitions": {
    "Userstat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int16"
        },
        "jobs": {
          "type": "integer",
          "format": "int16"
        },
        "records": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "Response400": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "msg": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "Response401": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "msg": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "NotFound": {
      "description": "NotFound Request",
      "schema": {
        "$ref": "#/definitions/Response400"
      }
    },
    "UnAuthorised": {
      "description": "Unauthorised Request",
      "schema": {
        "$ref": "#/definitions/Response401"
      }
    }
  },
  "parameters": {
    "jsonContentType": {
      "name": "content-type",
      "in": "header",
      "description": "request body mime type",
      "type": "string"
    },
    "bearerToken": {
      "name": "authorization",
      "in": "header",
      "description": "authorization token",
      "required": true,
      "type": "string"
    },
    "userstatID": {
      "name": "id",
      "in": "path",
      "description": "userstat ID",
      "required": true,
      "type": "integer"
    }
  }
}